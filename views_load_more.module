<?php
/**
 * @file views_load_more.module
 *
 * A Views pager module to allow new content to be appended to the bottom
 * of a view instead of replacing it.
 */

// We need to implement our own tpls for items being return via the load-more pager.
use Drupal\Core\Url;

/**
 * Implements hook_theme().
 */
function views_load_more_theme() {
  return array(
    'views_load_more_pager' => array(
      'variables' => array(
        'element' => 0,
        'parameters' => array(),
        'more_button_text' => '',
        'end_text' => '',
      ),
      'pattern' => 'views_load_more_pager__',
    ),
  );
}

/**
 * Preprocess function for views_load_more_pager theme hook.
 */
function template_preprocess_views_load_more_pager(array &$variables) {
  $element = $variables['element'];
  $parameters = $variables['parameters'];
  global $pager_page_array, $pager_total;
  if ($pager_page_array[$element] >= ($pager_total[$element] - 1)) {
    return;
  }

  $options = array(
    'query' => pager_query_add_page($variables['parameters'], $element, $pager_page_array[$element] + 1),
    'attributes' => array(
      'title' => t('Go to next page'),
      'rel' => 'next',
    ),
    // Below is ignored by default, supplied to support hook_link_alter
    // implementations.
    'pager_context' => array(
      'link_type' => 'next',
      'element' => $element,
      'interval' => 1,
    ),
  );
  $url = new Url('<current>', [], $options);
  if ($pager_page_array[$element] + 1 == 2) {
    $variables['more_button_text'] = 'second time';
  }
  $variables['items'] = \Drupal::l($variables['more_button_text'], $url);

  // Nothing to do if there is only one page.
  if ($pager_total[$element] <= 1) {
    return;
  }

  // Calculate various markers within this pager piece:
  // Max is the maximum page number
  $pager_max = $pager_total[$element];

  // Create the "next" link if we are not on the last page.
  if ($pager_page_array[$element] < ($pager_max - 1)) {
    $options = array(
      'query' => pager_query_add_page($parameters, $element, $pager_page_array[$element] + 1),
    );
    $url = new Url('<current>', [], $options);
    $variables['next_link'] = \Drupal::l($variables['more_button_text'], $url);
  }
}

/**
 * Implements hook_views_pre_render().
 *
 * @param \Drupal\views\ViewExecutable $view
 */
function views_load_more_views_pre_render($view) {
  $view->element['#attached']['library'][] = 'views_load_more/views_load_more';
}
